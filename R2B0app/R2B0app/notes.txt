https://github.com/jamesmontemagno/Xamarin.Plugins
https://github.com/jamesmontemagno/Xamarin.Plugins/tree/master/Battery
https://github.com/jamesmontemagno/Xamarin.Plugins/tree/master/DeviceInfo
https://github.com/jamesmontemagno/Xamarin.Plugins/tree/master/Settings

L'entreprise Industrial Automaton se trouve dans la ville Rordis.
Rordis City, ville majeur de Nubia.
Nubia se situe dans le Système Nubus, composé de 5 planetes.
Ce système est situé dans le Secteur Corellian.
Ce secteur est composé de 24 systèmes et est situé dans le Core Worlds.

http://starwars.wikia.com/wiki/Nubia

R-Series
https://code.google.com/p/rseries-open-control/
iBeacon/rfid : https://github.com/r2fid/r2fid.github.io

for xamarin BLE
http://forums.xamarin.com/discussion/27250/bluetooth-support-in-xamarin-forms#latest


Screens
-------
1/ start app = App.cs => MainPage() (Xamarin MasterDetailPage)
available via Global.MainPage

2/ MainPage (Xamarin MasterDetailPage)
Master => MasterPage() (Xamarin ContentPage) = menu
Detail => PageSplash() (Xamarin ContentPage) = loading screen

3/ PageSplash timeout (Xamarin ContentPage)
Detail => DetailPage()

4/ DetailPage en mode Main (Xamarin ContentPage)
Header 	=> ViewHead()	= header with infos
Left 	=> ViewR2()		= graphical menu on R2 picture
Right 	=> ViewMain()	= keyboard with main functionalities

ViewMain => include ViewKeyboard() to send action to R2
graphical menu / masterpage menu => change DetailPage

5/ other pages
in 3 parts (header/left/right) (Xamarin ContentView)
Holos		=> to play with HP and Magic Panel
				ViewDome() + ViewMain()
Panels		=> to play with panels
				ViewDome() + ViewMain()
Logics		=> to change logics display
				ViewDome() + ViewMain()
Sound		=> to make some noise
				Viewxxx() + ViewMain()
Music		=> to launch music
				Viewxxx() + ViewMain()
in full screen (Xamarin ContentPage)
About 		=> informations about the smartphone and the program
Settings 	=> to change settings : R2 configuration, Communication, FontSize, ...

Toutes les minutes :
durée + niveau batterie


https://github.com/oysteinkrog/SQLite.Net-PCL

Ajouter ESP8266 à la plaque
pgm : d'abord essai de se connecté au wifi maison
si pas réussi (n'est pas dans la liste des wifi détecté)
alors démarrer comme un access point

/status
renvoi status@nom=value@nom=value@...@nom=value
pour batterie, en int : 120 = 12.0 V
"BatteryBody"
"BatteryHead"
level radio wifi ?
level radio entre dome et body ?


arduino

cbi + dataport
spectrum analyser
WAV trigger
ESP8266 => !!!! ATTENTION : 3.3 V !!!!!!
mesure des batteries

lister les PIN utilisées...
I2C => avec qui ?
serial ? 3 serial de dispo (en plus du 0 (pin 0 et 1) qui sert à l'IDE) de 14 à 19
2 à 13 et 44 à 46 : PWM
PIN avec interrupt
2 (int0) et aussi PWM
3 (int1) et aussi PWM
18 (int5) et aussi TX1
19 (int4) et aussi RX1
20 (int3) et aussi SDA
21 (int2) et aussi SDL

arduino en intermédiaire pour le dôme !
brancher connecteur R/C de rotation du dôme sur arduino
et faire un PWM depuis l'arduino vers la carte SYREN
haut/bas (à droite, avec le dôme) de la R/C pour ouvrir/fermer les panels ?
utiliser un switch de la R/C pour changer de mode ???
genre 
switch off = dome + panel
switch on = bras gauche + bras droit

ajouter émetteur 2.4 GHz pour communication avec Dôme (qui aura un récepteur)


